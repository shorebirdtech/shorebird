#!/usr/bin/env bash
set -e

# shared.sh expects PROG_NAME, BIN_DIR, and OS to be set.
# https://gist.github.com/ptc-mrucci/61772387878ed53a6c717d51a21d9371
# https://stackoverflow.com/questions/59895/how-do-i-get-the-directory-where-a-bash-script-is-located-from-within-the-script/67149152#67149152

BIN_DIR=$(cd "$(dirname "$BASH_SOURCE")"; cd -P "$(dirname "$(readlink "$BASH_SOURCE" || echo .)")"; pwd)
PROG_NAME="$BIN_DIR/$(basename "$BASH_SOURCE")"
OS="$(uname -s)"

# Update shorebird if needed.
# Run in a subshell to avoid changing the user's current directory with `cd`.
(
  cd $BIN_DIR
  BRANCH_NAME=$(git symbolic-ref HEAD | sed -e 's|refs/heads/||')
  if [ "$BRANCH_NAME" == "bo/auto-update" ]; then
    # Update to the latest stable version
    git remote prune origin
    git fetch --tags 
    git reset --hard origin/bo/auto-update
  fi
)

FLUTTER_VERSION=`cat "$BIN_DIR/internal/flutter.version"`
source "$BIN_DIR/../third_party/flutter/bin/internal/shared.sh"

# We currently depend on a forked (3.7.8 stable) Flutter shared.sh script
# under third_party. Eventually we'll re-write it ourselves.
shared::execute "$@"