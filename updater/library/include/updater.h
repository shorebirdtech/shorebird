#ifndef updater_h
#define updater_h

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <stdarg.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>

/**
 * Struct containing configuration parameters for the updater.
 * Passed to all updater functions.
 * NOTE: If this struct is changed all language bindings must be updated.
 */
typedef struct AppParameters {
  /**
   * Update channel name.  Set to NULL or "eng" to disable updates.
   */
  const char *channel;
  /**
   * Client ID, required.  Typically a UUID, used for handling
   * percentage rollouts.
   */
  const char *client_id;
  /**
   * Product ID, required.  Typically generated by Shorebird and included
   * in your app to identify which app/channel/version triple to update.
   */
  const char *product_id;
  /**
   * base_version, required.  Named version of the app, off of which updates
   * are based.  Can be either a version number or a hash.
   */
  const char *base_version;
  /**
   * Update URL.  Set to NULL to use the default update URL.
   */
  const char *update_url;
  /**
   * Path to the original aot library, required.  For Flutter apps this
   * is the path to the bundled libapp.so.  May be used for compression
   * downloaded artifacts.
   */
  const char *original_libapp_path;
  /**
   * Path to the app's libflutter.so, required.  May be used for ensuring
   * downloaded artifacts are compatible with the Flutter/Dart versions
   * used by the app.  For Flutter apps this should be the path to the
   * bundled libflutter.so.  For Dart apps this should be the path to the
   * dart executable.
   */
  const char *vm_path;
  /**
   * Path to cache_dir where the updater will store downloaded artifacts.
   */
  const char *cache_dir;
} AppParameters;

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

void shorebird_init(const struct AppParameters *c_params);

/**
 * Return the active version of the app, or NULL if there is no active version.
 */
char *shorebird_active_version(void);

/**
 * Return the path to the active version of the app, or NULL if there is no
 * active version.
 */
char *shorebird_active_path(void);

/**
 * Free a string returned by the updater library.
 */
void shorebird_free_string(char *c_string);

/**
 * Check for an update.  Returns true if an update is available.
 */
bool shorebird_check_for_update(void);

/**
 * Synchronously download an update if one is available.
 */
void shorebird_update(void);

#ifdef __cplusplus
} // extern "C"
#endif // __cplusplus

#endif /* updater_h */
